{"version":3,"file":"dist/js/bundle.js","mappings":"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","sources":["webpack://weather/webpack/bootstrap","webpack://weather/webpack/runtime/global","webpack://weather/webpack/runtime/publicPath","webpack://weather/./src/weather.js","webpack://weather/./src/geolocation.js","webpack://weather/./src/map.js","webpack://weather/./src/history.js","webpack://weather/./src/index.js","webpack://weather/./src/page.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","const weather = {\n  apiKey: \"d62132a71a9144c3594bd6a136b16dfc\",\n  baseUrl: \"https://api.openweathermap.org/\",\n\n  get(lat, lon) {\n    const url = `${this.baseUrl}data/2.5/weather?lat=${lat}&lon=${lon}&appid=${this.apiKey}`;\n\n    return fetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(response);\n      })\n      .catch((err) => new Error(err));\n  },\n\n  findCityCoords(cityName) {\n    const url = `${this.baseUrl}geo/1.0/direct?q=${cityName}&limit=1&appid=${this.apiKey}`;\n\n    return fetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(response);\n      })\n      .then(\n        (data) =>\n          new Promise((resolve, reject) => {\n            if (data[0]) {\n              resolve(data[0]);\n            }\n            reject(new Error(\"City was not found\"));\n          })\n      )\n      .catch((err) => console.log(\"Error: \", err));\n  },\n\n  toCelsius(fahrenheit) {\n    return parseFloat(fahrenheit) - 273.15;\n  },\n};\n\nexport default weather;\n","const geolocation = {\n  getCurrentPosition: () =>\n    fetch(\"https://get.geojs.io/v1/ip/geo.json\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(response);\n      })\n      .catch((err) => console.log(\"Error: \", err)),\n};\n\nexport default geolocation;\n","class Map {\n  apiKey = \"AIzaSyB1RMnKzcvlp3v90ei9EUIFlAn5qbFuzqc\";\n\n  baseUrl = \"https://maps.googleapis.com/maps/api/staticmap\";\n\n  // Html Container for Map\n  container;\n\n  constructor(htmlContainer) {\n    this.container = htmlContainer;\n  }\n\n  render(lat, lon) {\n    const params = {\n      key: this.apiKey,\n      size: `640x640`,\n      center: `${lat},${lon}`,\n      zoom: 10,\n      map_id: \"fa7cf5ec5edea579\",\n    };\n\n    const searchParams = new URLSearchParams(params);\n    const url = `${this.baseUrl}?${searchParams.toString()}`;\n\n    const img = document.createElement(\"img\");\n    img.src = url;\n\n    this.container.innerHTML = \"\";\n    this.container.append(img);\n  }\n}\n\nexport default Map;\n","class History {\n  KEY = \"history\";\n\n  storage;\n\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  add(city) {\n    let items = this.get();\n    items = items.filter((item) => item !== city);\n    items.unshift(city);\n    items = items.splice(0, 10);\n    this.storage.setItem(\"history\", JSON.stringify(items));\n  }\n\n  get() {\n    return JSON.parse(this.storage.getItem(this.KEY)) || [];\n  }\n}\n\nexport default History;\n","import \"../assets/styles/reset.css\";\nimport \"../assets/styles/main.css\";\nimport weather from \"./weather\";\nimport geolocation from \"./geolocation\";\nimport Page from \"./page\";\n\nconst page = new Page(document.getElementById(\"app\"));\n\ngeolocation\n  .getCurrentPosition()\n  .then((coords) => weather.get(coords.latitude, coords.longitude))\n  .then((weatherData) => page.render(weatherData));\n","import weather from \"./weather\";\nimport Map from \"./map\";\nimport imgSun from \"../assets/images/sun.svg\";\nimport imgSearch from \"../assets/images/search.svg\";\nimport History from \"./history\";\n\nclass Page {\n  // Root HTML element, from witch we find every other elements\n  rootElement;\n\n  // Html element for displaying City Name\n  city;\n\n  // Html element for displaying temperature\n  t;\n\n  // Html form\n  form;\n\n  // Html search city input\n  input;\n\n  // Html element for rendering previous search history\n  searchHistory;\n\n  // History of search\n  history;\n\n  map;\n\n  constructor(rootElement) {\n    this.rootElement = rootElement;\n    this.history = new History(window.localStorage);\n\n    this.makeLayout(this.rootElement);\n    this.addWeatherMarkup(this.rootElement.querySelector(\".weather-data\"));\n    this.addSearchForm(this.rootElement.querySelector(\".weather-search\"));\n\n    this.map = new Map(this.rootElement.querySelector(\".map-panel\"));\n    this.searchHistory = this.rootElement.querySelector(\".search-history\");\n    this.city.innerHTML = \"Определяем ваше местоположение...\";\n\n    this.renderSearchHistory(this.history.get());\n  }\n\n  makeLayout() {\n    this.rootElement.innerHTML = `\n      <div id=\"container\">\n        <div class=\"row weather-panel\">\n          <div class=\"weather-wrapper\">\n            <div class=\"weather-data\"></div>\n            <div class=\"weather-search\"></div>\n            <div class=\"search-history\"></div>\n          </div>\n        </div>\n        <div class=\"row map-panel\"></div>\n      </div>\n    `;\n  }\n\n  addWeatherMarkup(el) {\n    this.img = document.createElement(\"img\");\n    this.img.src = imgSun;\n    this.img.className = \"weather-data__icon\";\n\n    this.t = document.createElement(\"p\");\n    this.t.className = \"weather-data__temp\";\n\n    this.city = document.createElement(\"p\");\n    this.city.className = \"weather-data__city\";\n\n    el.append(this.img);\n    el.append(this.t);\n    el.append(this.city);\n\n    return el;\n  }\n\n  /* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n  addSearchForm(el) {\n    el.innerHTML = `\n      <div class=\"text-field\">\n        <div class=\"text-field__icon\">\n          <form class=\"city-form\">\n            <input\n              class=\"text-field__input\"\n              type=\"search\"\n              name=\"city\"\n              placeholder=\"Город\"\n            />\n          </form>\n          <span class=\"text-field__aicon\">\n            <img src=\"${imgSearch}\" alt=\"Submit form\" />\n          </span>\n        </div>\n      </div>\n    `;\n\n    this.form = this.rootElement.querySelector(\".city-form\");\n    this.input = this.rootElement.querySelector(\".text-field__input\");\n    this.form.addEventListener(\"submit\", this.onSubmitSearch);\n\n    return el;\n  }\n\n  render(data) {\n    const celsius = weather.toCelsius(data.main.temp);\n    this.t.innerHTML = `${(celsius > 0 ? \"+\" : \"\") + celsius.toFixed()}°C`;\n    this.city.innerHTML = data.name;\n\n    this.renderSearchHistory(this.history.get());\n    this.map.render(data.coord.lat, data.coord.lon);\n  }\n\n  renderSearchHistory(history) {\n    this.searchHistory.innerHTML = \"\";\n\n    history.forEach((city) => {\n      const btn = document.createElement(\"button\");\n      btn.className = \"tag-btn\";\n      btn.innerHTML = city;\n      btn.addEventListener(\"click\", this.onClickCity);\n\n      this.searchHistory.append(btn);\n    });\n  }\n\n  onSubmitSearch = (event) => {\n    event.preventDefault();\n    this.showCityWeather(this.input.value);\n  };\n\n  onClickCity = (event) => {\n    this.showCityWeather(event.target.innerHTML);\n  };\n\n  showCityWeather(cityName) {\n    this.lockPage();\n\n    return weather\n      .findCityCoords(cityName)\n      .then((cityCoords) => weather.get(cityCoords.lat, cityCoords.lon))\n      .then((weatherData) => {\n        this.history.add(cityName);\n        this.render(weatherData);\n      })\n      .catch((err) => console.error(err))\n      .finally(() => this.unlockPage());\n  }\n\n  lockPage() {\n    this.input.disabled = true;\n  }\n\n  unlockPage() {\n    this.input.disabled = false;\n    this.input.value = \"\";\n  }\n}\n\nexport default Page;\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","apiKey","baseUrl","get","lat","lon","url","fetch","then","response","ok","json","Promise","reject","err","findCityCoords","cityName","data","resolve","console","log","toCelsius","fahrenheit","parseFloat","Map","htmlContainer","container","params","key","size","center","zoom","map_id","searchParams","URLSearchParams","toString","img","createElement","innerHTML","append","History","storage","city","items","filter","item","unshift","splice","setItem","JSON","stringify","parse","getItem","KEY","page","Page","rootElement","event","preventDefault","showCityWeather","input","value","target","history","localStorage","makeLayout","addWeatherMarkup","querySelector","addSearchForm","map","searchHistory","renderSearchHistory","el","imgSun","className","t","imgSearch","form","addEventListener","onSubmitSearch","celsius","weather","main","temp","toFixed","name","render","coord","forEach","btn","onClickCity","lockPage","cityCoords","weatherData","add","error","unlockPage","disabled","getElementById","geolocation","coords","latitude","longitude"],"sourceRoot":""}